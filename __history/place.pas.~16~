unit place;

interface

uses
Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.StdCtrls, Vcl.DBCtrls,
Vcl.Grids, Vcl.DBGrids, Vcl.Mask, Vcl.ExtCtrls, DBConnectionModule, FireDAC.Stan.Param;

type
TplaceForm = class(TForm)
Panel1: TPanel;
Label1: TLabel;
Label2: TLabel;
Label3: TLabel;
nameDBEdit: TDBEdit;
DBGrid1: TDBGrid;
DBNavigator1: TDBNavigator;
huriganaDBEdit: TDBEdit;
cancelButton: TButton;
postButton: TButton;
newButton: TButton;
codeDBEdit: TDBEdit;
buttonPanel: TPanel;
closeButton: TButton;
printButton: TButton;
placeDataSource: TDataSource;
procedure postButtonClick(Sender: TObject);
procedure FormCreate(Sender: TObject);
procedure DBGrid1CellClick(Column: TColumn);
procedure cancelButtonClick(Sender: TObject);
procedure closeButtonClick(Sender: TObject);
procedure newButtonClick(Sender: TObject);
    procedure printButtonClick(Sender: TObject);
private
{ Private declarations }
public
{ Public declarations }
procedure LoadData;
end;

var
placeForm: TplaceForm;

implementation

{$R *.dfm}

procedure TplaceForm.postButtonClick(Sender: TObject);
  begin
  if placeDataSource.DataSet.State = dsInsert then
  begin
  placeDataSource.DataSet.Insert;
  LoadData;
  ShowMessage('저장되었습니다.');
end
else if placeDataSource.DataSet.State = dsEdit then
  begin
  placeDataSource.DataSet.Post;
  LoadData;
  ShowMessage('저장되었습니다.');
  end;
end;

procedure TplaceForm.printButtonClick(Sender: TObject);
begin
  var
  PDFExportFilter: TQRPDFDocumentFilter;
  PDFFileName: string;
begin
  PDFFileName := 'PlaceReport_' + FormatDateTime('yyyy-mm-dd_hh-nn-ss', Now) + '.pdf';

  QRPlaceReport.DataSet := placeDataSource.DataSet;
  QRPlaceReport.Page.Orientation := poLandscape; // 인쇄 페이지 방향 설정
  QRPlaceReport.Page.PaperSize := A4;

  // PDF Export Filter 설정
  PDFExportFilter := TQRPDFDocumentFilter.Create(nil);
  try
    PDFExportFilter.FileName := PDFFileName;
    PDFExportFilter.FontHandling := fhAutoEmbed;

    // 레포트 생성 및 PDF로 출력
    QRPlaceReport.ExportToFilter(PDFExportFilter);
  finally
    PDFExportFilter.Free;
  end;

  // PDF 파일 열기
  ShellExecute(Handle, 'open', PChar(PDFFileName), nil, nil, SW_SHOWNORMAL)
end;

procedure TplaceForm.LoadData;
begin
  DBConnModule.ConnectDB;
  DBConnModule.ExecuteQuery1('SELECT * FROM PLACE');
  placeDataSource.DataSet := DBConnModule.placeQuery;
  placeDataSource.DataSet.Open; // 데이터셋을 열어주는 코드를 추가합니다
end;

procedure TplaceForm.FormCreate(Sender: TObject);
begin
postButton.Enabled := False;
cancelButton.Enabled := False;
LoadData;
end;

procedure TplaceForm.DBGrid1CellClick(Column: TColumn);
begin
if not (placeDataSource.DataSet.State in [dsInsert, dsEdit]) then
begin
newButton.Enabled := False;
postButton.Enabled := True;
cancelButton.Enabled := True;
end;
end;

procedure TplaceForm.cancelButtonClick(Sender: TObject);
begin
newButton.Enabled := True;
postButton.Enabled := False;
cancelButton.Enabled := False;
LoadData;
end;

procedure TplaceForm.closeButtonClick(Sender: TObject);
begin
Close;

end;

procedure TplaceForm.newButtonClick(Sender: TObject);

begin
//  if officeDataSource.DataSet.State <> dsInsert then // 현재 레코드가 삽입 상태가 아닌 경우에만 추가 모드로 전환합니다.
    placeDataSource.DataSet.Insert; // 새 레코드 추가
    newButton.Enabled := False;
    postButton.Enabled := True; // Enable the Post button when DBGrid is clicked
    cancelButton.Enabled := True; // Enable the Cancel button when DBGrid is clicked
end;

end.
