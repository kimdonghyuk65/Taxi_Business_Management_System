unit place;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.StdCtrls, Vcl.DBCtrls,
  Vcl.Grids, Vcl.DBGrids, Vcl.Mask, Vcl.ExtCtrls, DBConnectionModule, FireDAC.Stan.Param,
  Vcl.Printers;

type
  TplaceForm = class(TForm)
    Panel1: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    nameDBEdit: TDBEdit;
    DBGrid1: TDBGrid;
    DBNavigator1: TDBNavigator;
    huriganaDBEdit: TDBEdit;
    cancelButton: TButton;
    postButton: TButton;
    newButton: TButton;
    codeDBEdit: TDBEdit;
    buttonPanel: TPanel;
    closeButton: TButton;
    printButton: TButton;
    placeDataSource: TDataSource;
    PrintDialog1: TPrintDialog; // <- 이 부분을 추가합니다.
    procedure postButtonClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure DBGrid1CellClick(Column: TColumn);
    procedure cancelButtonClick(Sender: TObject);
    procedure closeButtonClick(Sender: TObject);
    procedure newButtonClick(Sender: TObject);
    procedure printButtonClick(Sender: TObject); // <- 이 부분을 추가합니다.
  private
    { Private declarations }
      function GetMaxColumnWidth(AColumn: TColumn; ACanvas: TCanvas): Integer; // 함수를 여기에 추가하세요.
  public
    { Public declarations }
    procedure LoadData;
    procedure PrintDBGrid;
  end;

var
  placeForm: TplaceForm;

implementation

{$R *.dfm}

procedure TplaceForm.postButtonClick(Sender: TObject);
begin
  if placeDataSource.DataSet.State = dsInsert then
  begin
    placeDataSource.DataSet.Insert;
    LoadData;
    ShowMessage('저장되었습니다.');
  end
  else if placeDataSource.DataSet.State = dsEdit then
  begin
    placeDataSource.DataSet.Post;
    LoadData;
    ShowMessage('저장되었습니다.');
  end;
end;

procedure TplaceForm.printButtonClick(Sender: TObject); // <- 이 부분을 추가합니다.
begin
  PrintDBGrid;
end;

procedure TplaceForm.LoadData;
begin
  DBConnModule.ConnectDB;
  DBConnModule.ExecuteQuery1('SELECT * FROM PLACE');
  placeDataSource.DataSet := DBConnModule.placeQuery;
  placeDataSource.DataSet.Open;
end;

procedure TplaceForm.FormCreate(Sender: TObject);
begin
  postButton.Enabled := False;
  cancelButton.Enabled := False;
  LoadData;
end;

procedure TplaceForm.DBGrid1CellClick(Column: TColumn);
begin
  if not (placeDataSource.DataSet.State in [dsInsert, dsEdit]) then
  begin
    newButton.Enabled := False;
    postButton.Enabled := True;
    cancelButton.Enabled := True;
  end;
end;


procedure TplaceForm.cancelButtonClick(Sender: TObject);
begin
  newButton.Enabled := True;
  postButton.Enabled := False;
  cancelButton.Enabled := False;
  LoadData;
end;

procedure TplaceForm.closeButtonClick(Sender: TObject);
begin
  Close;
end;

procedure TplaceForm.newButtonClick(Sender: TObject);
begin
  placeDataSource.DataSet.Insert; // 새 레코드 추가
  newButton.Enabled := False;
  postButton.Enabled := True; // Enable the Post button when DBGrid is clicked
  cancelButton.Enabled := True; // Enable the Cancel button when DBGrid is clicked
end;

procedure TplaceForm.PrintDBGrid;
var
  i, j, X, Y, ColWidth: Integer;
  CellText: string;
begin
  if PrintDialog1.Execute then
  begin
    Printer.BeginDoc;
    Printer.Canvas.Font.Size := 12;

    Y := 100; // 시작 Y 좌표

    // DBGrid의 헤더 출력
    X := 100; // 시작 X 좌표
    for i := 0 to DBGrid1.Columns.Count - 1 do
    begin
      CellText := DBGrid1.Columns[i].Title.Caption;
      Printer.Canvas.TextOut(X, Y, CellText);

      ColWidth := GetMaxColumnWidth(DBGrid1.Columns[i], Printer.Canvas);
      X := X + ColWidth + 20; // 다음 열의 X 좌표를 계산
    end;

    // DBGrid의 내용 출력
    Y := Y + 20; // 다음 행의 Y 좌표를 계산
    for i := 0 to placeDataSource.DataSet.RecordCount - 1 do
    begin
      X := 100;
      for j := 0 to DBGrid1.Columns.Count - 1 do
      begin
        CellText := placeDataSource.DataSet.Fields[j].AsString;
        Printer.Canvas.TextOut(X, Y, CellText);

        ColWidth := GetMaxColumnWidth(DBGrid1.Columns[j], Printer.Canvas);
        X := X + ColWidth + 20; // 다음 열의 X 좌표를 계산
      end;
      Y := Y + 20; // 다음 행의 Y 좌표를 계산
      placeDataSource.DataSet.Next; // 다음 레코드
    end;

    Printer.EndDoc;
  end;
end;
function TplaceForm.GetMaxColumnWidth(AColumn: TColumn; ACanvas: TCanvas): Integer;
var
  i, MaxWidth, CurrentWidth: Integer;
begin
  MaxWidth := ACanvas.TextWidth(AColumn.Title.Caption);
  AColumn.Field.DataSet.First;

  for i := 0 to AColumn.Field.DataSet.RecordCount - 1 do
  begin
    CurrentWidth := ACanvas.TextWidth(AColumn.Field.AsString);
    if CurrentWidth > MaxWidth then
      MaxWidth := CurrentWidth;

    AColumn.Field.DataSet.Next;
  end;

  Result := MaxWidth;
end;


end.
